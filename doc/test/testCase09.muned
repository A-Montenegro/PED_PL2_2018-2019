MODULE nueve;
	CONST
		constante1= 7;
		constante2= 5;
		constante3= true;
	TYPE
	  	registro1 = RECORD
			edad: integer;
			casado: boolean;
		END;
		registro2 = RECORD
			edad: integer;
			casado: boolean;
		END;
		registro3 = RECORD
			edad: integer;
			casado: boolean;
		END;
	VAR 
		entero1 : INTEGER;
		entero2,entero3,entero4,enteroInterno: INTEGER;
		logico1: boolean;
		logico2: boolean;
		persona1: registro1;
		persona2: registro1;	
		persona3: registro3;
	PROCEDURE SUMAR(var x: INTEGER; var y: INTEGER);
	 	BEGIN
			entero1:= x + y;
	END SUMAR;
	PROCEDURE GENERARNUMERO: INTEGER;
	 	VAR
	 		enteroInterno: BOOLEAN;
	 	PROCEDURE INUTIL;
	 		BEGIN
	 			enteroInterno:= false;
	 	END INUTIL;
	 	BEGIN
	 	 	RETURN 5;
	END GENERARNUMERO;
	PROCEDURE CALCULAR (VAR a,b: INTEGER; VAR c: registro3): integer ;
	  	TYPE
	  		registroSubPrograma = RECoRD
	  			edad: integer;
	  			casado: boolean;
	  		END;
	  	VAR 
	  		entero1: boolean;
	  		enteroSubprograma: integer;
	  		r2: registro2;
	  		rsub: registroSubPrograma;
	  		
	 	BEGIN
	 		enteroSubprograma := 5/56;
	 		c.casado:= false;
	 		r2.casado:= false;
	 		if(persona1.casado) then
	    		WRITEINT(constante2);
	    		if(entero1) then
	    			WRITEINT(constante2);
	    			RETURN 2;
	    		else
	    			RETURN 2;
	    		end;
	    	else
	    		RETURN 2;
	    	end;
	 		SUMAR(constante1,constante2);
	 	END Sumar; 	
	  BEGIN
	    persona2.edad:= CALCULAR(GENERARNUMERO, entero1, persona3);
	    logico2:= persona2.casado;
	    Sumar(entero3, entero4);
	    WRITESTRING("Suma:");
	    WRITEINT(entero1);
	    WHILE 1<>1 do
	    	if(constante3) then
	    		WRITEINT(entero4);
	    	END;
	    END;
END nueve;
